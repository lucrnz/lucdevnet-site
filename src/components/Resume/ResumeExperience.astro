---
import Icon from "../Icon.astro";
import {
  prettyPrintDateDifference,
  roundDateDifference,
  dateDifference
} from "../../helpers/DateDifference";
import {
  formatDateTime,
  DateTimeFormattingConfig
} from "../../helpers/formatDateTime";
import type { Skill } from "../../types/resume/Skill";
import type { JobTitle } from "../../types/resume/JobTitle";
import type { JobCompany } from "../../types/resume/JobCompany";
import type { JobLocation } from "../../types/resume/JobLocation";
import type { JobLocationType } from "../../types/resume/JobLocationType";
import Link from "../Link.astro";
import { CompanyURL } from "../../consts";

export interface Props {
  title: JobTitle;
  companyName: JobCompany;
  startDate: Date;
  endDate?: Date;
  location: JobLocation;
  locationType: JobLocationType;
  bulletPoints: string[];
  skills?: Skill[];
  showEndDate?: boolean;
}

const {
  title,
  companyName,
  startDate,
  endDate,
  location,
  locationType,
  bulletPoints,
  skills,
  showEndDate: providedShowEndDate
} = Astro.props as Props;

const showEndDate = Boolean(endDate && providedShowEndDate);

const timeTotal = prettyPrintDateDifference(
  roundDateDifference(dateDifference(startDate, endDate ?? new Date()))
);

const startDateRendered = formatDateTime(
  startDate,
  DateTimeFormattingConfig.MonthYearOnly
);

const endDateRendered = endDate
  ? formatDateTime(endDate, DateTimeFormattingConfig.MonthYearOnly)
  : "";
---

<div class="experience-job">
  <div class="left-side">
    <div class="job-info">
      <h4>{title}</h4>
      <span class="title-and-icon"
        ><Icon name="mdi:office-building" />
        <Link url={CompanyURL[companyName]} name={companyName} /></span
      >
      {
        endDate && (
          <span class="title-and-icon">
            <Icon name="mdi:clock" /> {timeTotal}
          </span>
        )
      }
      {
        !endDate && (
          <span class="title-and-icon">
            <Icon name="mdi:clock" />{" "}
            <time-difference-wrapper
              data-start={startDate.toJSON()}
              data-end="now"
            />
          </span>
        )
      }
      <span class="title-and-icon"
        ><Icon name="mdi:calendar-month" />
        {
          showEndDate
            ? `${startDateRendered} to ${endDateRendered}`
            : `Started: ${startDateRendered}`
        }
      </span>
      <span class="title-and-icon"
        ><Icon name="ic:baseline-location-on" />
        {location} · {locationType}</span
      >
      {
        skills && (
          <span class="title-and-icon">
            <span class="skill-list" role="list">
              <span>
                <Icon name="mdi:wrench" />
                Skills:
              </span>
              {skills.map((skill) => (
                <span class="skill-list-item" role="listitem">
                  {skill}
                </span>
              ))}
            </span>
          </span>
        )
      }
    </div>
  </div>
  <div class="right-side">
    <div class="title">
      <h4>Description</h4>
    </div>
    <div class="job-bullet-points" role="list">
      {
        bulletPoints.map((point) => (
          <span role="listitem">
            <Icon name="ic:baseline-check-box" /> {point}
          </span>
        ))
      }
    </div>
  </div>
</div>

<style lang="scss">
  @use "../../styles/common.scss" as *;
  @use "../../styles/resume-common.scss" as *;

  .experience-job {
    @include resume-card-config;

    @media screen and (min-width: $laptop-breakpoint) {
      flex-direction: row;
    }

    & > .left-side,
    & > .right-side {
      display: flex;
      flex-direction: column;
      width: unset;
      padding: 5px;

      @media screen and (min-width: $tablet-breakpoint) {
        padding: 20px;
        width: 50%;
      }
    }

    & > .left-side {
      @media screen and (max-width: $tablet-breakpoint) {
        padding: 10px;
      }

      & > .job-info {
        display: flex;
        flex-direction: column;
        margin-bottom: 10px;
        gap: 8px;
      }
    }

    & > .right-side {
      @media screen and (max-width: $tablet-breakpoint) {
        padding: 10px;
      }

      & > .job-bullet-points {
        display: flex;
        gap: 8px;
      }
    }
  }

  .title-and-icon {
    @media screen {
      display: flex;
      align-items: center;
      gap: 8px;
    }
  }

  .skill-list-title {
    display: flex;
    align-items: flex-start;
    gap: 8px;
  }

  .skill-list-item:not(:last-child):after {
    content: "·";
    display: inline-block;
  }
</style>

<script>
  import setupTimeDifferenceWrapper from "../../scripts/Elements/TimeDifferenceWrapper";
  setupTimeDifferenceWrapper();
</script>
