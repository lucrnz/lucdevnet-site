---
import Icon from "../Icon.astro";
import Link from "../Link.astro";

import {
  formatDateTime,
  DateTimeFormattingConfig
} from "../../helpers/formatDateTime";
import { AuthorName, AUTHOR_URL, DEFAULT_AUTHOR } from "../../consts";

export interface Props {
  publishDate: Date;
  readTimeMinutes: number;
  authorName?: AuthorName;
}

const {
  publishDate,
  readTimeMinutes,
  authorName: providedAuthorName
} = Astro.props;

const authorName = providedAuthorName ?? DEFAULT_AUTHOR;

const authorUrl = AUTHOR_URL[authorName];

const formatedDate = formatDateTime(
  publishDate,
  DateTimeFormattingConfig.DayShortMonthYear
);

const minuteWord = readTimeMinutes === 1 ? "minute" : "minutes";

const readTimeString = `${readTimeMinutes} ${minuteWord} read.`;
---

<section class="blog-post-subtitle">
  <span class="blog-post-subtitle-author title-and-icon">
    <Icon name="mdi:user-circle" />
    By: <Link name={authorName} url={authorUrl} />
  </span>
  <span class="blog-post-subtitle-date title-and-icon">
    <Icon name="mdi:calendar-month" />
    {formatedDate}
  </span>
  <span class="blog-post-subtitle-read-time title-and-icon">
    <Icon name="mdi:clock" />
    {readTimeString}
  </span>
  <span id="views" class="blog-post-subtitle-read-time title-and-icon">
    <Icon name="mdi:eye" />
    <span></span>
  </span>
</section>

<style lang="scss">
  @use "../../styles/common.scss" as *;

  .blog-post-subtitle {
    display: flex;
    flex-direction: row;
    gap: 10px;

    @media screen and (max-width: $mobile-breakpoint) {
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }
  }

  .title-and-icon {
    @media screen {
      display: flex;
      align-items: center;
      gap: 5px;
    }
  }

  #views {
    display: none;
  }
</style>

<script>
  import { registerPageCount } from "../../scripts/PageCount";

  const { count } = await registerPageCount();

  (document.querySelector("#views")! as HTMLElement).style.display = "flex";

  const viewWord = count === 1 ? "view" : "views";
  document.querySelector(
    "#views > span"
  )!.textContent = `${count} ${viewWord}.`;
</script>
